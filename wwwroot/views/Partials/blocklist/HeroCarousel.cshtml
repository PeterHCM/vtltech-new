@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.Models
@using Umbraco.Cms.Core.Models.PublishedContent
@inherits UmbracoViewPage<BlockListItem>

@{
    var content = Model.Content;
    var banners = content.Value<BlockListModel>("banners");
    var imageUrls = banners.Select(b => b.Content.Value<IEnumerable<IPublishedContent>>("images")?.FirstOrDefault()?.Url() ?? "https://placehold.co/1920x1080/4a4a4a/ffffff?text=No+Image").ToList();
    var imageUrlsJson = System.Text.Json.JsonSerializer.Serialize(imageUrls);
}
@if (banners != null && banners.Any())
{
    <section id="hero-carousel-container" class="relative w-full overflow-hidden h-[500px]">
    @if (banners != null && banners.Any())
    {
        <div id="carousel-track" class="relative flex w-full h-full transition-transform duration-700 ease-in-out">
            @foreach (var banner in banners)
            {
                var bannerContent = banner.Content;
                var heading = bannerContent.Value<string>("heading");
                var subtitle = bannerContent.Value<string>("subtitle");
                var ctaLinks = bannerContent?.Value<IEnumerable<Link>>("ctaLinks") ?? Enumerable.Empty<Link>();
                var image = bannerContent?.Value<IEnumerable<IPublishedContent>>("images")?.FirstOrDefault();
                var imageUrl = image?.Url() ?? "https://placehold.co/1920x1080/4a4a4a/ffffff?text=No+Image+Found";

                <div class="carousel-slide w-full shrink-0 h-full relative flex items-center justify-center text-center text-white">
                    <!-- Ảnh nền riêng cho từng slide -->
                    <div class="absolute inset-0 bg-cover bg-center z-0"
                         style="background-image: url('@imageUrl'); transform: scale(1.05);">
                    </div>

                    <!-- Overlay -->
                    <div class="absolute inset-0 bg-black/60 z-0"></div>

                    <!-- Nội dung -->
                    <div class="relative z-10 max-w-4xl mx-auto">
                        @if (!string.IsNullOrWhiteSpace(heading))
                        {
                            <h2 class="text-4xl sm:text-5xl md:text-6xl font-extrabold mb-4 leading-tight drop-shadow-lg">@heading</h2>
                        }

                        @if (!string.IsNullOrWhiteSpace(subtitle))
                        {
                            <p class="text-base sm:text-lg md:text-xl mb-6 font-light drop-shadow">@subtitle</p>
                        }

                        @if (ctaLinks.Any())
                        {
                            <div class="flex flex-wrap justify-center gap-4 mt-8">
                                @foreach (var link in ctaLinks)
                                {
                                    var url = link.Url;
                                    var label = link.Name;

                                    if (!string.IsNullOrWhiteSpace(url) && !string.IsNullOrWhiteSpace(label))
                                    {
                                        <a href="@url" target="@(link.Target ?? "_self")"
                                           class="inline-flex items-center gap-2 bg-primary text-white px-8 py-3 rounded-full hover:bg-white hover:text-primary transition-all duration-300 transform hover:-translate-y-1 shadow-lg text-sm font-medium">
                                            @label
                                        </a>
                                    }
                                }
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <!-- Nút điều hướng -->
        <button id="carousel-prev" class="absolute top-1/2 left-4 -translate-y-1/2 p-3 rounded-full bg-white/30 backdrop-blur-sm text-white hover:bg-white/50 transition-colors z-20 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" /></svg>
        </button>
        <button id="carousel-next" class="absolute top-1/2 right-4 -translate-y-1/2 p-3 rounded-full bg-white/30 backdrop-blur-sm text-white hover:bg-white/50 transition-colors z-20 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg>
        </button>

        <!-- Dấu chấm điều hướng -->
        <div id="carousel-dots" class="absolute bottom-6 left-1/2 transform -translate-x-1/2 flex space-x-2 z-20">
            @for (int i = 0; i < banners.Count(); i++)
            {
                <button class="dot w-3 h-3 rounded-full bg-white/50 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-white"></button>
            }
        </div>
    }
</section>
}
