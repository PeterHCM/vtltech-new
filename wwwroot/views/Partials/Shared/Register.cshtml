@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@using Microsoft.AspNetCore.Http.Extensions
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Security
@using Umbraco.Cms.Web.Website.Controllers
@using Umbraco.Cms.Web.Website.Models
@using Umbraco.Extensions
@inject MemberModelBuilderFactory memberModelBuilderFactory;
<div class="register-form max-w-md mx-auto p-6 bg-white dark:bg-gray-900 rounded-xl shadow-xl border border-gray-200 dark:border-gray-700">
@{
    // Build a registration model with parameters
    var registerModel = memberModelBuilderFactory
        .CreateRegisterModel()
        // Set the member type alias to use for the new member
        .WithMemberTypeAlias(Constants.Conventions.MemberTypes.DefaultAlias)
        // If null or not set, this will redirect to the current page
        .WithRedirectUrl(null)
        // Set to true if you want the member editable properties shown.
        // It will only displays properties marked as "Member can edit" on the "Info" tab of the Member Type.
        .WithCustomProperties(false)
        // By default the member will be logged in automatically after registration.
        // Set this to false if the member should not be logged in automatically.
        .WithAutomaticLogIn(true)
        .Build();

    var success = TempData["FormSuccess"] != null;
}
@if (success)
{
    <p class="text-green-600 dark:text-green-400">Registration succeeded.</p>
}
else
{
    using (Html.BeginUmbracoForm<UmbRegisterController>(
        "HandleRegisterMember",
        new {
            MemberTypeAlias = registerModel.MemberTypeAlias,
            UsernameIsEmail = registerModel.UsernameIsEmail,
            RedirectUrl = registerModel.RedirectUrl,
            AutomaticLogIn = registerModel.AutomaticLogIn
        }))
    {
        <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Create a new account.</h2>
        <hr class="border-gray-300 dark:border-gray-700 my-4" />
        <div asp-validation-summary="All" class="text-sm text-red-600 dark:text-red-400 mb-4"></div>

        <div class="mb-4">
            <label asp-for="@registerModel.Name" class="block text-sm font-medium text-gray-700 dark:text-gray-300"></label>
            <input asp-for="@registerModel.Name" class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" aria-required="true" />
            <span asp-validation-for="@registerModel.Name" class="text-sm text-red-600 dark:text-red-400"></span>
        </div>

        <div class="mb-4">
            <label asp-for="@registerModel.Email" class="block text-sm font-medium text-gray-700 dark:text-gray-300"></label>
            <input asp-for="@registerModel.Email" class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" autocomplete="username" aria-required="true" />
            <span asp-validation-for="@registerModel.Email" class="text-sm text-red-600 dark:text-red-400"></span>
        </div>

        <div class="mb-4">
            <label asp-for="@registerModel.Password" class="block text-sm font-medium text-gray-700 dark:text-gray-300"></label>
            <input asp-for="@registerModel.Password" class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" autocomplete="new-password" aria-required="true" />
            <span asp-validation-for="@registerModel.Password" class="text-sm text-red-600 dark:text-red-400"></span>
        </div>

        <div class="mb-4">
            <label asp-for="@registerModel.ConfirmPassword" class="block text-sm font-medium text-gray-700 dark:text-gray-300"></label>
            <input asp-for="@registerModel.ConfirmPassword" class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" autocomplete="new-password" aria-required="true" />
            <span asp-validation-for="@registerModel.ConfirmPassword" class="text-sm text-red-600 dark:text-red-400"></span>
        </div>

        @if (registerModel.MemberProperties != null)
        {
            for (var i = 0; i < registerModel.MemberProperties.Count; i++)
            {
                <div class="mb-4">
                    @Html.LabelFor(m => registerModel.MemberProperties[i].Value, registerModel.MemberProperties[i].Name, new { @class = "block text-sm font-medium text-gray-700 dark:text-gray-300" })
                    <input asp-for="@registerModel.MemberProperties[i].Value" class="mt-1 block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" />
                    @Html.HiddenFor(m => registerModel.MemberProperties[i].Alias)
                    <span asp-validation-for="@registerModel.MemberProperties[i].Value" class="text-sm text-red-600 dark:text-red-400"></span>
                </div>
            }
        }

        <button type="submit" class="inline-block bg-primary text-white px-6 py-2 rounded hover:bg-secondary transition">
            Register
        </button>
    }
}
</div>
