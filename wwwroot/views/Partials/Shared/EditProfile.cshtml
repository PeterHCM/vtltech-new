@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Web.Website.Controllers
@using Umbraco.Cms.Web.Website.Models
@using Umbraco.Extensions
@using System.Linq
@inject MemberModelBuilderFactory memberModelBuilderFactory

@using System.Text.Json
@{
    var profileModel = await memberModelBuilderFactory
        .CreateProfileModel()
        .WithRedirectUrl(null)
        .WithCustomProperties(true)
        .BuildForCurrentMemberAsync();

    var success = TempData["FormSuccess"] != null;

    var query = Context.Request.Query.ToDictionary(k => k.Key, v => v.Value.ToString());
    query.Remove("tab");
    string baseQuery = string.Join("&", query.Select(kv => $"{kv.Key}={kv.Value}"));
    string buildTabUrl(string tab) => $"{Context.Request.Path}?{baseQuery}&tab={tab}";

    var activeTab = Context.Request.Query["tab"].ToString().ToLower();
    if (string.IsNullOrWhiteSpace(activeTab)) activeTab = "account";

    string tabClass(string tab) =>
        tab == activeTab
        ? "flex items-center gap-2 px-4 py-2 font-semibold text-white bg-primary rounded"
        : "flex items-center gap-2 px-4 py-2 text-gray-700 dark:text-gray-300 hover:text-primary";

    string inputClass = "block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 placeholder-gray-400 shadow-sm focus:outline-none focus:ring-primary focus:border-primary";

    var dateAliases = new[] { "dateofbirth", "dateofissue", "dateofjoining" };

    var dropdownOptions = new Dictionary<string, List<string>>
    {
        { "maritalstatus", new List<string> { "Độc thân", "Đã kết hôn", "Ly hôn" } },
        { "contracttype", new List<string> { "Chính thức", "Thời vụ", "Thử việc", "Khác" } },
        { "position", new List<string> { "Managing Director", "Sales Director", "Sales Manager","Chief Accountant","Sales Assistant Manager","Sales Admin" } },
        { "department", new List<string> { "BOD", "Account", "Sales","Services" } },
        { "emergencycontact1relationship", new List<string> { "Cha", "Mẹ", "Vợ", "Chồng", "Con", "Anh", "Chị", "Em", "Bạn" } },
        { "emergencycontact2relationship", new List<string> { "Cha", "Mẹ", "Vợ", "Chồng", "Con", "Anh", "Chị", "Em", "Bạn"} }
    };
}

@if (profileModel != null)
{
    <div class="max-w-3xl mx-auto p-6 bg-white dark:bg-gray-900 rounded-lg shadow-md border border-gray-200 dark:border-gray-700">
        @if (success)
        {
            <div class="mb-4 text-green-600 dark:text-green-400 text-sm">
                ✅ Cập nhật tài khoản thành công!
            </div>
        }
        <div class="mb-6 flex gap-4 flex-wrap">
            <a href="@buildTabUrl("account")" class="@tabClass("account")">
                <svg class="h-6 w-6 text-gray-700 dark:text-gray-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
                Tài khoản
            </a>
            <a href="@buildTabUrl("personal")" class="@tabClass("personal")">        
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 6a7.5 7.5 0 1 0 7.5 7.5 7.5 7.5 0 0 0-7.5-7.5ZM6 10.5h.008v.008H6v-.008ZM21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                </svg>
                Cá nhân
            </a>
            <a href="@buildTabUrl("work")" class="@tabClass("work")">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M20.25 14.582V21a1.5 1.5 0 0 1-1.5 1.5H5.25A1.5 1.5 0 0 1 3.75 21v-6.418M20.25 14.582a4.5 4.5 0 0 0-2.31-2.222l-4.5-2.221a.75.75 0 0 0-.69 0l-4.5 2.221a4.5 4.5 0 0 0-2.31 2.222M20.25 14.582a4.5 4.5 0 0 1 0 5.418m-16.5-5.418a4.5 4.5 0 0 0 0 5.418M18 10.5V11a.75.75 0 0 1-.75.75h-8.5A.75.75 0 0 1 8 11v-.5M15 7.5v-1a1.5 1.5 0 0 0-1.5-1.5h-3A1.5 1.5 0 0 0 9 6.5v1" />
                </svg>        
                Công việc
            </a>
            <a href="@buildTabUrl("emergency1")" class="@tabClass("emergency1")">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 **text-red-500**">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0-1.036.84-1.875 1.875-1.875h14.25c1.035 0 1.875.84 1.875 1.875v10.5a1.875 1.875 0 0 1-1.875 1.875H4.125a1.875 1.875 0 0 1-1.875-1.875V6.75Z" />
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m0 3.75h.008M3.75 12h16.5" />
                </svg>
                Liên hệ 1
            </a>
            <a href="@buildTabUrl("emergency2")" class="@tabClass("emergency2")">        
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 **text-white**">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                    <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1 1 15 0Z" />
                </svg>
                Liên hệ 2
            </a>
        </div>
        @using (Html.BeginUmbracoForm<UmbProfileController>("HandleUpdateProfile", new { RedirectUrl = Context.Request.Path + Context.Request.QueryString }))
        {
            <div asp-validation-summary="All" class="text-sm text-red-600 dark:text-red-400 mb-4"></div>
            @* Trường hệ thống: luôn render, ẩn nếu không ở tab account *@
            <div class="mb-4" style="@(activeTab == "account" ? "" : "display:none")">
                <label asp-for="@profileModel.Name" class="block font-medium mb-1 text-gray-700 dark:text-gray-300">Tên</label>
                <input asp-for="@profileModel.Name" type="text" name="Name" class="@inputClass" aria-required="true" readonly />
                <span asp-validation-for="@profileModel.Name" class="text-sm text-red-600 dark:text-red-400 mt-1"></span>
            </div>
            <div class="mb-4" style="@(activeTab == "account" ? "" : "display:none")">
                <label asp-for="@profileModel.Email" class="block font-medium mb-1 text-gray-700 dark:text-gray-300">Email hệ thống</label>
                <input asp-for="@profileModel.Email"  class="@inputClass"  readonly/>
                <span asp-validation-for="@profileModel.Email" class="text-sm text-red-600 dark:text-red-400 mt-1"></span>
            </div>
            <div class="mb-4" style="@(activeTab == "account" ? "" : "display:none")">
                <label asp-for="@profileModel.UserName" class="block font-medium mb-1 text-gray-700 dark:text-gray-300">Tên đăng nhập</label>
                <input asp-for="@profileModel.UserName" class="@inputClass"  />
                <span asp-validation-for="@profileModel.UserName" class="text-sm text-red-600 dark:text-red-400 mt-1"></span>
            </div>

            @foreach (var prop in profileModel.MemberProperties)
            {
                var alias = prop.Alias.ToLower();

                var shouldShow =
                    (activeTab == "account" && new[] { "phone" }.Contains(alias)) ||
                    (activeTab == "personal" && new[] {
                        "fullname", "phone", "personalemail", "gender", "maritalstatus", "dateofbirth", "nationalid", "dateofissue", "placeofissue", "taxcode", "permanentaddress", "currentaddress"
                    }.Contains(alias)) ||
                    (activeTab == "work" && new[] {
                        "position", "department", "dateofjoining", "contracttype"
                    }.Contains(alias)) ||
                    (activeTab == "emergency1" && alias.StartsWith("emergencycontact1")) ||
                    (activeTab == "emergency2" && alias.StartsWith("emergencycontact2"));

                <div class="mb-4" style="@(shouldShow ? "" : "display:none")">
                    <label asp-for="@prop.Name" class="block font-medium mb-1 text-gray-700 dark:text-gray-300">@prop.Name</label>

                    @if (dropdownOptions.ContainsKey(alias))
                    {
                        <select name="MemberProperties[@prop.Alias]" class="@inputClass">                            
                            @foreach (var option in dropdownOptions[alias])
                            {
                                var selectedValue = JsonSerializer.Deserialize<string[]>(prop.Value?.ToString() ?? "[]")?.FirstOrDefault();                                
                                <option value="@option" selected="@(option == selectedValue ? "selected" : null)">@option</option>
                            }
                        </select>
                    }
                    else if (dateAliases.Contains(alias))
                    {
                        var rawValue = prop.Value?.ToString();
                        DateTime parsedDate;
                        string formattedDate = "";

                        if (DateTime.TryParseExact(rawValue, "dd/MM/yyyy HH:mm:ss",
                            System.Globalization.CultureInfo.InvariantCulture,
                            System.Globalization.DateTimeStyles.None, out parsedDate))
                        {
                            formattedDate = parsedDate.ToString("yyyy-MM-dd");
                        }
                        <input type="date" name="MemberProperties[@prop.Alias]" value="@formattedDate" class="@inputClass" />
                    }
                    else
                    {
                        <input type="text" 
                               name="MemberProperties[@prop.Alias]" 
                               value="@prop.Value"
                               id="@prop.Alias"
                               class="@inputClass" />
                        <span asp-validation-for="@prop.Value" class="text-sm text-red-600 dark:text-red-400 mt-1"></span>
                    }
                </div>
            }
            <button type="submit" class="w-full bg-primary hover:bg-secondary text-white font-medium py-2 px-4 rounded transition duration-200 mt-4">
                Lưu thay đổi
            </button>
        }
    </div>
}
