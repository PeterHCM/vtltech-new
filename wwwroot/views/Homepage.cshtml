@using Umbraco.Cms.Web.Common.PublishedModels
@using Umbraco.Cms.Core.Models.Blocks
@inherits UmbracoViewPage<Homepage>

@{
    Layout = "layout.cshtml";

    var blocks = Model.Value<BlockListModel>("contentBlocks");

    var blockViewMap = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)
    {
        { "heroBanner", "Partials/blocklist/heroBanner" },
        { "textBlock", "Partials/blocklist/textBlock" },
        { "ctaBlock", "Partials/blocklist/ctaBlock" },
        { "featuredContentBlock", "Partials/blocklist/featuredContentBlock" },
        { "documentControl", "Partials/blocklist/DocumentControl" },
        { "linkList", "Partials/blocklist/linkList" }
    };

    var heroCarouselBlock = blocks?.FirstOrDefault(b => b.Content.ContentType.Alias == "heroCarousel");
}

<!-- Hero Carousel Block (render riêng) -->
@if (heroCarouselBlock != null)
{
    @await Html.PartialAsync("Partials/blocklist/heroCarousel", heroCarouselBlock)
}

<!-- Các block còn lại -->
<section class="homepage px-6 md:px-12 lg:px-24">
    <div class="container">
        @foreach (var block in blocks ?? Enumerable.Empty<BlockListItem>())
        {
            var alias = block.Content.ContentType.Alias;

            // Bỏ qua heroCarousel vì đã render ở trên
            if (alias == "heroCarousel") continue;

            if (blockViewMap.TryGetValue(alias, out var partialPath))
            {
                @await Html.PartialAsync(partialPath, block)
            }
            else
            {
                <p class="text-red-500">Không tìm thấy view cho block: <strong>@alias</strong></p>
            }
        }
    </div>
</section>